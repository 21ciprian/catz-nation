/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import {useState} from 'react'

import Fact from '../components/FactComponent'
import Header from '../components/Header'

import CatComponent from '../components/CatComponent'

import styled from 'styled-components'
interface ICat {
	cat: any
	adaptability: number
	affection_level: number
	child_friendly: number
	energy_level: number
	dog_friendly: number
	id: string
	description: string
	intelligence: number
	name: string
	image: {
		url: string
		id: string
	}
	life_span: string
	origin: string
	temperament: string
	weight: {
		metric: string
	}
	wikipedia_url: string
}
interface IHome {
	n: string
	data: ICat[]
}

const CatContainer = styled.section`
	width: 90%;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: 2rem;
	margin: 2rem auto;
	padding: 1rem;
	/* border: 2px solid red; */
`
const Home = ({data}: IHome) => {
	const [fact, setFact] = useState<string>(
		'One reason that kittens sleep so much is because a growth hormone is released only during sleep.'
	)
	const [name, setName] = useState<string>('')
	const [filteredCats, setFilteredCats] = useState<ICat[]>([])
	const [catsOrigin, setCatsOrigin] = useState<string>('')
	const [catsLifeSpan, setCatsLifeSpan] = useState<string>('')
	const [catsWeight, setCatsWeight] = useState<string>('')

	const origin = Array.from(new Set(data.map(c => c.origin))).sort()
	const lifespan = Array.from(new Set(data.map(c => c.life_span))).sort(
		(a: any, b: any) => Number(a.split('-')[0]) - Number(b.split('-')[0])
	)
	const weight = Array.from(new Set(data.map(c => c.weight.metric))).sort()

	console.log({origin, lifeSpan: lifespan, weight})
	console.log({cats: filteredCats, data})
	const getCatByName = (name: string) => {
		setName(name)
		const filterred = data?.filter(cat =>
			cat?.name?.toLocaleLowerCase().includes(name.toLowerCase())
		)
		setFilteredCats(filterred)
		console.log({filterred})
	}
	const getCatByOrigin = (origin: string) => {
		setCatsOrigin(origin)
		const filterred = data?.filter(cat =>
			cat?.origin?.toLocaleLowerCase().includes(origin.toLowerCase())
		)
		setFilteredCats(filterred)
		console.log({filterred})
	}
	const getCatByLifeSpan = (lifeSpan: string) => {
		setCatsLifeSpan(lifeSpan)
		const filterred = data?.filter(cat =>
			cat?.life_span?.toLocaleLowerCase().includes(lifeSpan.toLowerCase())
		)
		setFilteredCats(filterred)
		console.log({filterred})
	}
	const getCatByWeight = (weight: string) => {
		setCatsWeight(weight)
		const filterred = data?.filter(cat =>
			cat?.weight?.metric?.toLocaleLowerCase().includes(weight.toLowerCase())
		)
		setFilteredCats(filterred)
		console.log({filterred})
	}

	const getFact = async () => {
		const res = await fetch(`https://catfact.ninja/fact`)
		const f = await res.json()
		setFact(f?.fact)
	}

	return (
		<div style={{overflow: 'hidden'}}>
			<Head>
				<title>CatzNation</title>
				<meta
					name='description'
					content='CatzNation app, generated by create next app to display various cats'
				/>
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<Header
				catsOrigin={catsOrigin}
				catsLifeSpan={catsLifeSpan}
				catsWeight={catsWeight}
				getCatByName={getCatByName}
				getCatByOrigin={getCatByOrigin}
				getCatByLifeSpan={getCatByLifeSpan}
				getCatByWeight={getCatByWeight}
				name={name}
				origin={origin}
				lifespan={lifespan}
				weight={weight}
				getFact={getFact}
			/>

			{fact && <Fact fact={fact} />}
			<CatContainer>
				{filteredCats
					? filteredCats?.map(cat => <CatComponent key={cat?.id} cat={cat} />)
					: data?.map(cat => <CatComponent key={cat?.id} cat={cat} />)}
			</CatContainer>
		</div>
	)
}

export async function getServerSideProps() {
	const response = await fetch(`https://api.thecatapi.com/v1/breeds`)
	const data = await response.json()

	return {props: {data}}
}

export default Home
